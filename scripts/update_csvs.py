#!/usr/bin/env python3
"""
Script simplificado para atualizar os CSVs da RFB.
Este √© um wrapper do download_rfb_csvs.py para facilitar o uso.
"""

import sys
from pathlib import Path

# Adiciona o diret√≥rio raiz do projeto ao path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from scripts.download_rfb_csvs import RFBCSVDownloader


def main():
    """
    Fun√ß√£o principal simplificada.
    """
    print("üîÑ Atualizando CSVs da RFB...")
    print()

    downloader = RFBCSVDownloader()

    # Limpa arquivos antigos
    print("üßπ Limpando arquivos antigos...")
    downloader.cleanup_old_files()

    # Baixa arquivos necess√°rios
    print("‚¨áÔ∏è  Baixando arquivos mais recentes...")
    success = downloader.download_all_required_files()

    if success:
        print("\n‚úÖ Download conclu√≠do com sucesso!")
        
        # Descompacta os arquivos zip
        print("üì¶ Descompactando arquivos...")
        extract_success = downloader.extract_zip_files()
        
        if extract_success:
            print("‚úÖ Descompacta√ß√£o conclu√≠da!")
            
            # Remove os arquivos zip
            print("üóëÔ∏è  Removendo arquivos zip...")
            cleanup_success = downloader.remove_zip_files()
            
            if cleanup_success:
                print("‚úÖ Atualiza√ß√£o conclu√≠da com sucesso!")
                dest_path = downloader.download_dir.absolute()
                print(f"üìÅ Arquivos CSV dispon√≠veis em: {dest_path}")
            else:
                print("‚ö†Ô∏è  Aviso: Alguns arquivos zip n√£o foram removidos.")
        else:
            print("‚ùå Erro durante a descompacta√ß√£o.")
            return 1
    else:
        print("\n‚ùå Erro durante a atualiza√ß√£o.")
        return 1

    return 0


if __name__ == "__main__":
    exit(main())
